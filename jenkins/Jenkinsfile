node {
    stage('Build') {
        docker.image('python:2-alpine').inside {
            sh 'python -m py_compile sources/add2vals.py sources/calc.py'
            stash(name: 'compiled-results', includes: 'sources/*.py*')
        }
    }

    stage('Test') {
        docker.image('qnib/pytest').inside {
            sh 'py.test --verbose --junit-xml test-reports/results.xml sources/test_calc.py'
        }

        // Post step (always run)
        junit 'test-reports/results.xml'
    }

    stage('Manual Approval') {
        input(
            message: 'Lanjutkan ke tahap Deploy?',
            ok: 'Proceed',
            parameters: []
        )
    }

    stage('Deliver') {
        def volume = "${env.WORKSPACE}/sources:/src"
        def image = 'cdrx/pyinstaller-linux:python2'

        // Unstash the compiled results into the workspace
        unstash(name: 'compiled-results')

        // Run pyinstaller inside the Docker container
        sh "docker run --rm -v ${volume} ${image} 'pyinstaller -F /src/add2vals.py'"

        // Archive the generated artifact
        archiveArtifacts 'sources/dist/add2vals'

        // Clean up build and dist directories
        sh "docker run --rm -v ${volume} ${image} 'rm -rf /src/build /src/dist'"
        sh 'sleep 60'
    }
}
