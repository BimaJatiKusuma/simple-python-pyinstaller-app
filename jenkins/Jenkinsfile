node {
    try {
        stage('Build') {
            docker.image('python:2-alpine').inside {
                sh 'python -m py_compile sources/add2vals.py sources/calc.py'
                stash name: 'compiled-results', includes: 'sources/*.py*'
            }
        }

        stage('Test') {
            docker.image('qnib/pytest').inside {
                sh 'py.test --junit-xml test-reports/results.xml sources/test_calc.py'
            }
            junit 'test-reports/results.xml'
        }

        stage('Manual Approval') {
            def userInput = input(
                message: 'Lanjutkan ke tahap Deploy?',
                ok: 'Proceed',
                parameters: []
            )
        }

        stage('Deploy') {
            def VOLUME = sh(script: 'pwd', returnStdout: true).trim() + "/sources:/src"
            def IMAGE = 'cdrx/pyinstaller-linux:python2'
            
            dir(env.BUILD_ID) {
                unstash 'compiled-results'
                docker.image(IMAGE).inside {
                    sh "pyinstaller -F add2vals.py"
                }
            }
            
            archiveArtifacts artifacts: "${env.BUILD_ID}/sources/dist/add2vals"
            
            docker.image(IMAGE).inside {
                sh "rm -rf build dist"
            }
            sh 'sleep 60'
        }
    } catch (Exception e) {
        currentBuild.result = 'FAILURE'
        throw e
    }
}
