node {
    stage('Build') {
        docker.image('python:2-alpine').inside {
            sh 'python -m py_compile sources/add2vals.py sources/calc.py'
        }
    }
    stage('Test') {
        docker.image('qnib/pytest').inside {
            sh 'py.test --verbose --junit-xml test-reports/results.xml sources/test_calc.py'
        }

        // Post step (always run)
        junit 'test-reports/results.xml'
    }

    stage('Manual Approval') {
        input(
                message: 'Lanjutkan ke tahap Deploy?',
                ok: 'Proceed',
                parameters: []
            )
    }

    stage('Deliver') {
        def VOLUME = "${env.WORKSPACE}/sources:/src"
        def IMAGE = 'cdrx/pyinstaller-linux:python2'

        dir('build-output') { // Ensure files are stored in a directory
            sh "docker run --rm -v ${VOLUME} ${IMAGE} pyinstaller -F /src/add2vals.py"

            // Archive artifacts
            archiveArtifacts 'sources/dist/add2vals'

            // Clean up unnecessary build files
            sh "docker run --rm -v ${VOLUME} ${IMAGE} rm -rf /src/build /src/dist"

            sh 'sleep 60' // Simulating post-deployment wait
        }
    }
}
