node {
    stage('Build') {
        docker.image('python:2-alpine').inside {
            sh 'python -m py_compile sources/add2vals.py sources/calc.py'
        }
    }
    stage('Test') {
        docker.image('qnib/pytest').inside {
            sh 'py.test --verbose --junit-xml test-reports/results.xml sources/test_calc.py'
        }

        // Post step (always run)
        junit 'test-reports/results.xml'
    }

    stage('Manual Approval') {
        input(
                message: 'Lanjutkan ke tahap Deploy?',
                ok: 'Proceed',
                parameters: []
            )
    }

    stage('Deliver') {
        def volume = "${pwd()}/sources:/src"
        def image = 'cdrx/pyinstaller-linux:python2'
        def buildDir = env.BUILD_ID

        stage('Prepare') {
            unstash 'compiled-results'
        }

        stage('Build Executable') {
            sh "mkdir -p ${buildDir}"
            dir(buildDir) {
                sh "docker run --rm -v ${volume} ${image} pyinstaller -F add2vals.py"
            }
        }

        stage('Archive Artifact') {
            archiveArtifacts artifacts: "${buildDir}/sources/dist/add2vals", fingerprint: true
        }

        stage('Cleanup') {
            sh "docker run --rm -v ${volume} ${image} rm -rf build dist"
        }
    }
}
